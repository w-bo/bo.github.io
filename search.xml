<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>路由多层级嵌套，多级菜单，tagview记录</title>
    <url>/2023/02/20/2-20%E6%9C%9D%E5%A4%95-%E8%B7%AF%E7%94%B1%E5%A4%9A%E5%B1%82%E7%BA%A7%E5%B5%8C%E5%A5%97%EF%BC%8C%E5%A4%9A%E7%BA%A7%E8%8F%9C%E5%8D%95%EF%BC%8Ctagview%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h2 id="一、路由多层级嵌套，多级菜单，面包屑，手写tagview多页签导航"><a href="#一、路由多层级嵌套，多级菜单，面包屑，手写tagview多页签导航" class="headerlink" title="一、路由多层级嵌套，多级菜单，面包屑，手写tagview多页签导航"></a>一、路由多层级嵌套，多级菜单，面包屑，手写tagview多页签导航</h2><h3 id="1、多级菜单配置"><a href="#1、多级菜单配置" class="headerlink" title="1、多级菜单配置"></a>1、多级菜单配置</h3><h3 id="2、面包屑"><a href="#2、面包屑" class="headerlink" title="2、面包屑"></a>2、面包屑</h3><h3 id="3、tagview多页签"><a href="#3、tagview多页签" class="headerlink" title="3、tagview多页签"></a>3、tagview多页签</h3>]]></content>
      <tags>
        <tag>Vue2</tag>
        <tag>菜单、tagView</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue3+vite+pinia+axios-移动电商实战</title>
    <url>/2023/02/20/Vue3-vite-pinia-axios-%E7%A7%BB%E5%8A%A8%E7%94%B5%E5%95%86%E5%AE%9E%E6%88%98/</url>
    <content><![CDATA[<h2 id="项目一：vue3-vite3-pinia-axios-移动电商实战"><a href="#项目一：vue3-vite3-pinia-axios-移动电商实战" class="headerlink" title="项目一：vue3+vite3+pinia+axios 移动电商实战"></a>项目一：vue3+vite3+pinia+axios 移动电商实战</h2><p>项目来源：朝夕教育</p>
<h3 id="1、vite"><a href="#1、vite" class="headerlink" title="1、vite"></a>1、vite</h3><p>![what is vite？](Vue3-vite-pinia-axios-移动电商实战/what is vite？.png)</p>
<p>vite是一个web 开发构建工具，构建项目速度比webpack更快。</p>
<p>vite 常见配置：</p>
<h3 id="2、pinia"><a href="#2、pinia" class="headerlink" title="2、pinia"></a>2、pinia</h3>]]></content>
      <tags>
        <tag>Vue3</tag>
        <tag>vite</tag>
      </tags>
  </entry>
  <entry>
    <title>markdown语法</title>
    <url>/2023/02/01/markdown%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[<p>hh<br>你更新了？</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> (<span class="params"></span>)&#123;</span><br><span class="line">	<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;代码块&#x27;</span>)</span><br><span class="line">&#125;();</span><br></pre></td></tr></table></figure>



<p>滚动翻页1</p>
<p>滚动翻页2</p>
<p>滚动翻页3</p>
<p>滚动翻页4</p>
<p>滚动翻页5</p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>语法</tag>
      </tags>
  </entry>
  <entry>
    <title>test</title>
    <url>/2023/02/10/test/</url>
    <content><![CDATA[<p>hexo 上传图片的测试：</p>
<p>图像一：<br><img src="/2023/02/10/test/safari-pinned-tab.svg" alt="作者"></p>
<p>视频一：</p>
<iframe src="//player.bilibili.com/player.html?aid=981742617&bvid=BV1qt4y1W7uF&cid=725326997&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>

<p>链接：<a href="https://www.bilibili.com/video/BV1qt4y1W7uF/?share_source=copy_web&vd_source=c2c18d251cad9ae9dbff27c9e243d4e1">Vue3 TS Pinia 使用全流程</a></p>
]]></content>
      <tags>
        <tag>pic</tag>
      </tags>
  </entry>
  <entry>
    <title>ts-学习</title>
    <url>/2023/02/17/ts-%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h2 id="一、Typescript"><a href="#一、Typescript" class="headerlink" title="一、Typescript"></a>一、Typescript</h2><h3 id="1、ts-介绍"><a href="#1、ts-介绍" class="headerlink" title="1、ts 介绍"></a>1、ts 介绍</h3><p>是什么？</p>
<p>typescript 简称 ts，是 JavaScript 的超集。（JavaScript有的它都有）</p>
<p>typescript = type + JavaScript，在 js 基础上增加了类型支持。</p>
<p>typescript 是微软开发的开源编程语言，可以在 js 运行的地方运行。</p>
<p><code>let age: number = 18</code></p>
<p>解决了什么问题？有什么好处/优势？ </p>
<p><img src="/2023/02/17/ts-%E5%AD%A6%E4%B9%A0/1676639577300.png" alt="ts 优势"></p>
<ul>
<li>减少改 bug、找 bug 的时间，提示开发效率。（理解于ts 、js 编程语言的机制）</li>
<li>程序中的代码有代码提示，随时随地的安全感，谁不喜欢呢。</li>
<li>强大的类型系统增加了代码的可维护性，使得更容易重构项目。</li>
<li>类型推断机制，享受语言的优势，谁不爱？</li>
<li>提供了强大的类型系统，大部分遵循 js 书写的习惯，同时也降低学习的成本。</li>
</ul>
<p>vue3 的源码使用 ts 进行重写，angular 默认支持 ts，react 与 ts 完美配合~中大型前端项目首选编程语言。</p>
<p>怎么用？</p>
<p>浏览器、node.js 默认只支持 js 语言，ts 语言需要经过编译后进行运行。</p>
<p>① npm i -g tsc，tsc 模块包将 ts 代码编译成 js 代码，后可通过 node ××.js 进行运行。</p>
<p>② npm i -g ts-node , ts-node 模块包，内部偷偷地将 ts 代码进行编译后运行。</p>
<p>③ npm i -g nodemon，nodemon 工具包可以持续运行一个 js 文件，ts 文件应该也是可以的，我的电脑装了 nvm 管理多个 node 版本，可能是文件丢失，导致 ts-node 出现问题，也就执行不了 ts 文件。</p>
<h3 id="2、ts-常用类型"><a href="#2、ts-常用类型" class="headerlink" title="2、ts 常用类型"></a>2、ts 常用类型</h3>]]></content>
      <tags>
        <tag>ts</tag>
      </tags>
  </entry>
  <entry>
    <title>朝夕-路由多层级嵌套，多级菜单，tagview记录</title>
    <url>/2023/02/20/%E8%B7%AF%E7%94%B1%E5%A4%9A%E5%B1%82%E7%BA%A7%E5%B5%8C%E5%A5%97%EF%BC%8C%E5%A4%9A%E7%BA%A7%E8%8F%9C%E5%8D%95%EF%BC%8Ctagview%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>面试问题合集</title>
    <url>/2023/02/02/%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98%E5%90%88%E9%9B%86/</url>
    <content><![CDATA[<h1 id="一、面试准备工作"><a href="#一、面试准备工作" class="headerlink" title="一、面试准备工作"></a>一、面试准备工作</h1><h2 id="①当下环境🐣"><a href="#①当下环境🐣" class="headerlink" title="①当下环境🐣"></a>①当下环境🐣</h2><p>​    分析当下应聘岗位的现状，了解公司用人技术要求经验；了解工作经验对应的工作薪资取值范围，eg：1-3年对应6-10k（武汉）；是否旺季，金三银四；招聘软件：前程无忧、智联、boss、猎聘、内推；可以自行先投放简历试水，市场反应如何进行调整，如降低薪资，观望机会，提升自己；合理的安排时间进行简历的投放，新颖的打招呼语等…</p>
<h2 id="②自我认知🐤"><a href="#②自我认知🐤" class="headerlink" title="②自我认知🐤"></a>②自我认知🐤</h2><p>​    根据<code>jd</code>需求完善简历，提升自己技术栈；互联网岗位是火速发展的，竞争对手不可谓不多；认清自己的实力，找寻一个有提升空间的<code>company</code>，与君共勉，静待花开~</p>
<p>​    简历：<strong>自我基本信息</strong>+<strong>专业技能</strong>+工作/教育经历+<strong>项目经历</strong>+个人总结/爱好兴趣；简历最好是背下来，熟读于心；对于自我介绍和项目介绍应当具有充分的准备；我认为自我介绍时，应不慌张，不逃避，顺其自然，出口成章。</p>
<ul>
<li><p>基本信息介绍：<br>首先是基本的信息介绍，只需告诉面试官我是谁等，时间不应过长，占比15%；eg：面试官，您好！我叫××，今年××岁，毕业于武汉××学院。对于前端开发岗位我所掌握的专业技能有：×××，以上我的基本信息介绍完毕。</p>
</li>
<li><p>项目介绍：</p>
<p>eg：面试官：简单介绍一下你最熟悉的项目，那部分是你写的代码？</p>
<p>我：这个时候多半咱就直接开门见山了，摊牌了。应该将自己准备充分真实写过代码的项目介绍出来。项目背景，项目所用到的技术，<strong>项目模块/功能</strong>，项目中的<strong>难点</strong>/亮点（<strong>难点必须得准备一个！</strong>）。我开发了一个××原料库系统，该系统是针对于公司在化妆品行业作研发而使用。归纳了供应商、原料、配方、法规与化妆品之间的联系，使得更改的开展工作。项目使用的技术栈有：vue2全家桶+axios+webpack+elementUi+echarts；项目模块大致分为供应商、原料、配方、法规等4个模块，实现的功能有：对提供原料的供应商进行记录，标记其优劣，对供应商信息打印等。原料、配方的录入，相关附件的在线预览（word、ppt、excel、pdf）等；配方与原料进行关联，完善化妆品的研发。我觉得项目中的难点是：在于excel、ppt在线预览这块，在上传文件的时候，不像其他的文件（图片、视频）后端返回的地址可以通过标签进行预览。解决办法：想着是将文件转换成html进行展示，后面通过查阅资料，网上的api进行完成（excel.js、pptx.js）。</p>
</li>
<li><p>专业技能：</p>
<p>针对岗位在开发中所需要使用到的技能，面试官也会根据所写的进行提问；</p>
</li>
</ul>
<h2 id="③面试所需掌握知识🐥"><a href="#③面试所需掌握知识🐥" class="headerlink" title="③面试所需掌握知识🐥"></a>③面试所需掌握知识🐥</h2><p>​    基础：html5+css3+javascript；</p>
<p>​    进阶：ajax、HTTP、js高级（es6、promise）；</p>
<p>​    框架：uniapp、vue2/3、react、angular；</p>
<p>​    UI框架：element-ui、vant-ui、echarts、ant-design；</p>
<p>​    后端：node.js、sql；</p>
<p>​    工具：ps、pxcook、vscode、hbx、微信开发者工具，md、notepad、xmind，postman；</p>
<hr>
<h3 id="答题技巧"><a href="#答题技巧" class="headerlink" title="答题技巧"></a>答题技巧</h3><p>​    遵循是什么，怎么用，解决了什么问题，有没有替代方案？</p>
<p>​    eg：promise的理解？</p>
<p>​    答：promise是一个对象，使用的时候会当做构造函数来进行使用，一般会new一下，有三种状态：pending、reslove、reject；.then可以获取成功的结果，.catch中捕获失败的结果，解决了回调地狱的问题，之前想处理后一个请求需要拿到前一个请求的结果，这样会一层套一层形成了地狱回调。promise可以很好的解决回调地狱，但是不能够简化代码，通常使用中我会配合async、await进行使用。</p>
<p>​    async、await的理解？</p>
<p>​    答：async、await是es7里面的新语法，async可以用来申明一个异步函数，await可以用来等待一个异步方法执行完成，可以很好的替代promise中的.then。</p>
<p>async函数返回一个promise对象，可以使用.then继续添加回调，当函数执行遇到await就会先返回，等到异步操作完成，再执行函数体内后面的语句。</p>
<p>​    权限管理是怎么实现的？</p>
<p>​    答：</p>
<p>​    说说你对vue3的理解？</p>
<p>​    ts的理解？</p>
<h2 id="④offer沟通🦅"><a href="#④offer沟通🦅" class="headerlink" title="④offer沟通🦅"></a>④offer沟通🦅</h2><p>​    暂未收获offer：</p>
<p>​    当面试完几天后还未收到offer，应当主动询问hr，给予一定的压力，告知已有下来的offer，但还是想进行对比等。    </p>
<p>​    收到offer：</p>
<p>​    明确入职时间，福利待遇，入职相关准备。</p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>面试</tag>
      </tags>
  </entry>
  <entry>
    <title>高频面试题</title>
    <url>/2023/02/17/%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95%E9%A2%98/</url>
    <content><![CDATA[<h1 id="常见面试题："><a href="#常见面试题：" class="headerlink" title="常见面试题："></a>常见面试题：</h1><h2 id="一、JavaScript"><a href="#一、JavaScript" class="headerlink" title="一、JavaScript"></a>一、JavaScript</h2><h3 id="1、this的指向规则，arguments，全局变量和局部变量同名时的坑"><a href="#1、this的指向规则，arguments，全局变量和局部变量同名时的坑" class="headerlink" title="1、this的指向规则，arguments，全局变量和局部变量同名时的坑"></a>1、this的指向规则，arguments，全局变量和局部变量同名时的坑</h3><p>理解：</p>
<p>​    this可以理解为指针，通常在函数<code>function</code>内部进行使用，当函数存在调用者是，此时this指向其的调用者，无调用者是指向<code>window</code>，<strong>注意</strong>：在严格模式<code>use  strict</code>下this指向的是<code>undefined</code>；箭头函数中的this指向其函数声明所在环境，也就是上下文。</p>
<p>​    arguments意思是指函数的形参集合。</p>
<p>​    全局变量：通常在函数外部所定义，拥有全局作用域；局部变量：定义在函数内部，只能在函数中进行访问，作用范围是在函数开始到结尾，即在 {} 里。在 <strong>ECMAScript 6</strong> 简称ES6之后，新增了块级作用域；所谓块级作用域就是使用 <code>let</code> 和 <code>const</code> 关键字声明的变量只在其所在的代码块 {} 内有效，在 {} 外不能访问，避免了 js 变量<strong>预解析</strong>的问题。当全局变量和局部变量同名时，<strong>全局变量是不会作用于同名局部变量的作用域的</strong>。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">全局变量的声明方式：</span><br><span class="line">	一、<span class="keyword">var</span> num = <span class="number">9</span>; <span class="comment">// 使用 var 关键字</span></span><br><span class="line">	二、num = <span class="number">9</span>; <span class="comment">// 没有使用 var 关键字声明，直接使用赋值的变量（无论函数内部还是外部）。</span></span><br><span class="line">局部变量的声明方式：</span><br><span class="line">	一、函数内部使用 <span class="keyword">var</span> 关键字进行使用的变量；</span><br><span class="line">		<span class="keyword">function</span> <span class="title function_">eg</span>(<span class="params"></span>) &#123;</span><br><span class="line">	      	text1 = <span class="string">&quot;我也是全局变量&quot;</span>; <span class="comment">// 没有使用 var 为全局变量</span></span><br><span class="line">			<span class="keyword">var</span> text2 = <span class="string">&quot;我是局部变量&quot;</span>;</span><br><span class="line">			<span class="variable language_">console</span>.<span class="title function_">log</span>(text2); <span class="comment">// 局部变量只能在函数中使用</span></span><br><span class="line">		&#125;</span><br><span class="line">全局变量局部变量同名：</span><br><span class="line">	<span class="keyword">var</span> a = <span class="string">&#x27;我是全局变量&#x27;</span>;</span><br><span class="line">	<span class="keyword">function</span> <span class="title function_">b</span>(<span class="params"></span>) &#123;</span><br><span class="line">		<span class="keyword">var</span> a = <span class="string">&#x27;我是局部变量&#x27;</span>;</span><br><span class="line">		<span class="variable language_">console</span>.<span class="title function_">log</span>(a) <span class="comment">// 局部变量</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="title function_">b</span>()</span><br><span class="line">	<span class="variable language_">console</span>.<span class="title function_">log</span>(a) <span class="comment">// 全局变量	</span></span><br></pre></td></tr></table></figure>

<p>三道面试题：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> length = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">length</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">  <span class="attr">length</span>: <span class="number">100</span>,</span><br><span class="line">  <span class="attr">action</span>: <span class="keyword">function</span>(<span class="params">callback</span>) &#123;</span><br><span class="line">    <span class="title function_">callback</span>();</span><br><span class="line">		<span class="variable language_">arguments</span>[<span class="number">0</span>]();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>];</span><br><span class="line">obj.<span class="title function_">action</span>(fn, ...arr);</span><br><span class="line"><span class="comment">// 结果：1 5</span></span><br></pre></td></tr></table></figure>



<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">  <span class="attr">a</span>: <span class="number">99</span>,</span><br><span class="line">  <span class="attr">f</span>: test</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">test</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span><br><span class="line">  a = <span class="number">100</span>;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">a</span>);</span><br><span class="line">  <span class="keyword">var</span> a;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span><br><span class="line">&#125;</span><br><span class="line">obj.<span class="title function_">f</span>();</span><br><span class="line"><span class="comment">// 结果：undefined 99 100</span></span><br></pre></td></tr></table></figure>



<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">f1</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> b = <span class="number">2</span> * a;</span><br><span class="line">  <span class="keyword">var</span> a = <span class="number">20</span>;</span><br><span class="line">  <span class="keyword">var</span> c = a + <span class="number">1</span>;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(b);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">f1</span>()</span><br><span class="line"><span class="comment">// 结果：NaN 21</span></span><br></pre></td></tr></table></figure>



<h3 id="2、暂定"><a href="#2、暂定" class="headerlink" title="2、暂定"></a>2、暂定</h3>]]></content>
      <tags>
        <tag>面试</tag>
      </tags>
  </entry>
</search>
